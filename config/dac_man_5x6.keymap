#include "mouse.dtsi"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

#define DEFAULT 0
#define RAISE   1
#define LOWER   2

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // Commented layout is not actual layout.
            // -------------------------------------------------------------------------------------------------------------------------
            // |   ESC   |    1    |    2    |    3    |    4    |    5    |                   |    6    |    7    |    8    |    9    |    0    |  BSPC   |
            // |   TAB   |    Q    |    W    |    E    |    R    |    T    |                   |    Y    |    U    |    I    |    O    |    P    |    \    |
            // |  LALT   |    A    |    S    |    D    |    F    |    G    |                   |    H    |    J    |    K    |    L    |    ;    |    '    |
            // |  LCTRL  |    Z    |    X    |    C    |    V    |    B    |                   |    N    |    M    |    ,    |    .    |    /    |  RALT   |
            //                     |    [    |    ]    |                                                           |    -    |    =    |
            //                               | MO lay 1| SPACE   |                   | ENTER   | MO lay 2|
            //                                         |   TAB   |   HOME  |   END   |   DEL   |
            //                                         |  Raise  |    ~    |   GUI   |  Lower  |

            bindings = <
&kp TILDE  &kp N1          &kp N2          &kp N3       &kp N4            &kp N5  &kp N6     &kp N7            &kp N8         &kp N9          &kp N0          &kp HOME
&kp TAB    &kp Q           &kp W           &kp F        &kp P             &kp B   &kp J      &kp L             &kp U          &kp Y           &kp SEMI        &kp BSLH
&kp LCTRL  &mt LEFT_WIN A  &mt LEFT_ALT S  &mt LCTRL R  &mt LEFT_SHIFT T  &kp G   &kp M      &mt LEFT_SHIFT N  &mt LCTRL E    &mt LEFT_ALT I  &mt LEFT_WIN O  &kp APOS
&kp LSHFT  &kp Z           &kp X           &kp C        &kp D             &kp V   &kp K      &kp H             &kp COMMA      &kp DOT         &kp FSLH        &kp RSHFT
           &kp MINUS       &kp EQUAL       &kp LBKT     &kp RBKT                             &kp LEFT          &kp DOWN       &kp UP          &kp RIGHT
&kp TAB    &kp SPACE       &kp LALT        &kp LGUI     &kp DEL           &tog 1  &kp RCTRL  &kp PAGE_UP       &kp PAGE_DOWN  &kp RALT        &kp BSPC        &kp RET
            >;
        };

        layer_1 {
            bindings = <
&kp C_RESET  &trans             &kp K_PREVIOUS  &kp C_PLAY      &kp C_NEXT       &trans            &kp C_BRIGHTNESS_INC  &kp N7         &kp N8   &kp N9                  &trans     &kp C_RESET
&trans       &kp C_VOLUME_UP    &kp LA(LEFT)    &mmv MOVE_UP    &kp LA(RIGHT)    &msc SCROLL_UP    &kp C_BRIGHTNESS_DEC  &kp N4         &kp N5   &kp N6                  &kp MINUS  &trans
&trans       &kp C_VOLUME_DOWN  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCROLL_DOWN  &kp PLUS              &kp N1         &kp N2   &kp N3                  &kp FSLH   &trans
&trans       &kp F1             &kp F2          &kp F3          &kp F4           &trans            &kp STAR              &kp COMMA      &kp N0   &kp DOT                 &kp RET    &trans
             &kp F5             &kp F6          &kp F7          &kp F8                                                   &kp F9         &kp F10  &kp F11                 &kp F12
&mkp MB1     &mkp MB2           &trans          &trans          &trans           &trans            &trans                &kp C_AC_HOME  &kp END  &mt LEFT_ALT BACKSPACE  &trans     &trans
            >;
        };
    };
};
